version: '3'

services: 
    db-customer:
      image: mysql
      command: --default-authentication-plugin=mysql_native_password
      container_name: db-customer
      restart: always 
      environment: 
        - MYSQL_DATABASE=dock-customers
        - MYSQL_ROOT_PASSWORD=dock
      ports: 
        - "3306:3306"
      networks:
          - dock-network
    
    db-account:
      image: mysql
      command: --default-authentication-plugin=mysql_native_password
      container_name: db-account
      restart: always 
      environment: 
        - MYSQL_DATABASE=dock-accounts
        - MYSQL_ROOT_PASSWORD=dock
      ports: 
        - "3307:3306"
      networks:
        - dock-network

    db-transactions:
      image: mysql
      command: --default-authentication-plugin=mysql_native_password
      container_name: db-transactions
      restart: always
      environment: 
        - MYSQL_DATABASE=dock-transactions
        - MYSQL_ROOT_PASSWORD=dock
      ports: 
        - "3308:3306"
      networks:
        - dock-network

    zoo1:
      image: zookeeper:3.4.9
      hostname: zoo1
      ports:
        - "2181:2181"
      environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
      volumes:
        - ./zk-single-kafka-single/zoo1/data:/data
        - ./zk-single-kafka-single/zoo1/datalog:/datalog
      networks:
        - dock-network

    kafka1:
      image: confluentinc/cp-kafka:5.5.0
      hostname: kafka1
      ports:
        - "9092:9092"
      environment:
        KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
        KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
        KAFKA_BROKER_ID: 1
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      volumes:
        - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
      networks:
        - dock-network
      depends_on:
        - zoo1
    
    kowl:
      image: quay.io/cloudhut/kowl:v1.2.2
      restart: on-failure
      hostname: kowl
      ports:
        - "8080:8080"
      volumes:
        - ./kowl_config.yaml:/etc/kowl/config.yaml
      entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
      networks:
        - dock-network
      depends_on:
        - kafka1

    customer:
      image: marcelors/customer-microservice:latest
      container_name: customer
      ports:
        - "3333:3333"
      restart: always
      environment:
        - "APP_SECRET=bf96a4ac86f0f4c2cfd487afc0ea6e0e"
        - "KAFKA_HOST=kafka1"
        - "KAFKA_PORT=19092"
        - "CLIENT_ID_CREATE_ACCOUNT_KAFKA=dock"
        - "TOPIC_CREATE_ACCOUNT_KAFKA=create-account"
        - "DB_HOST=db-customer"
        - "DB_PORT=3306"
        - "DB_USER=root"
        - "DB_PASSWORD=dock"
        - "DB_NAME=dock-customers"
      depends_on:
        - db-customer
        - kafka1
      networks:
        - dock-network
      command: >
        sh -c "npm run typeorm migration:run && npm run server"
    
    account:
      image: marcelors/account-microservice:latest
      container_name: account
      ports:
        - "3334:3334"
      restart: always
      environment:
        - "APP_SECRET=bf96a4ac86f0f4c2cfd487afc0ea6e0e"
        - "KAFKA_HOST=kafka1"
        - "KAFKA_PORT=19092"
        - "CLIENT_ID_CREATE_ACCOUNT_KAFKA=dock"
        - "TOPIC_CREATE_ACCOUNT_KAFKA=create-account"
        - "CLIENT_ID_UPDATE_ACCOUNT_KAFKA=dock-update-account"
        - "TOPIC_UPDATE_ACCOUNT_KAFKA=update-balance-account"
        - "CLIENT_ID_CREATE_TRANSACTIONS_KAFKA=dock-transactions"
        - "TOPIC_CREATE_TRANSACTIONS_KAFKA=create-transactions"
        - "DB_HOST=db-account"
        - "DB_PORT=3306"
        - "DB_USER=root"
        - "DB_PASSWORD=dock"
        - "DB_NAME=dock-accounts"
      networks:
        - dock-network
      depends_on:
        - db-account        
        - kafka1
        - customer
      command: >
        sh -c "npm run typeorm migration:run && npm run server"      

    transactions:
      image: marcelors/transactions-microservice:latest
      container_name: transactions
      ports:
        - "3335:3335"
      restart: always
      environment:
        - "APP_SECRET=bf96a4ac86f0f4c2cfd487afc0ea6e0e"
        - "KAFKA_HOST=kafka1"
        - "KAFKA_PORT=19092"
        - "CLIENT_ID_UPDATE_ACCOUNT_KAFKA=dock-update-account"
        - "TOPIC_UPDATE_ACCOUNT_KAFKA=update-balance-account"
        - "CLIENT_ID_CREATE_TRANSACTIONS_KAFKA=dock-transactions"
        - "TOPIC_CREATE_TRANSACTIONS_KAFKA=create-transactions"
        - "DB_HOST=db-transactions"
        - "DB_PORT=3306"
        - "DB_USER=root"
        - "DB_PASSWORD=dock"
        - "DB_NAME=dock-transactions"
      networks:
        - dock-network
      depends_on:
        - db-transactions
        - kafka1
        - customer
        - account
      command: >
        sh -c "npm run typeorm migration:run && npm run server"

networks: 
    dock-network:
        driver: bridge      